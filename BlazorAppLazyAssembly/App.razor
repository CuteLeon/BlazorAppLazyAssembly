@using System.Reflection
@using BlazorAppLazyAssembly.Services
@using Microsoft.AspNetCore.Components.WebAssembly.Services

@inject ILogger<App> Logger
@inject LazyAssemblyLoader AssemblyLoader
@inject MyLazyAssemblyLoader MyAssemblyLoader

<Router AppAssembly="@typeof(App).Assembly"
        OnNavigateAsync="@OnNavigateAsync">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <LayoutView Layout="@typeof(MainLayout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@code {
    private async Task OnNavigateAsync(NavigationContext args)
    {
        try
        {
            if (args.Path == "fetchdata")
            {
                _ = await this.AssemblyLoader.LoadAssembliesAsync(new[] { "LazyRazorProject.dll" });
                _ = await this.MyAssemblyLoader.LoadAssembliesAsync(new[] { "LazyRazorProject2.dll" });
            }
        }
        catch (Exception ex)
        {
            this.Logger.LogError("Error: {Message}", ex.Message);
        }
    }
}